- description: Restarts a bosh job (service VM)
  executionEnabled: true
  id: 6c5bb057-3dc4-4d6e-937b-eb4520215f20
  loglevel: INFO
  name: bosh-restart-job
  nodefilters:
    dispatch:
      excludePrecedence: true
      keepgoing: false
      rankOrder: ascending
      threadcount: 1
    filter: 'tags: pcf-dev,pcf-prod-dc20'
  nodesSelectedByDefault: false
  options:
  - description: Set this value to '1' to update the scripts from source control.
    name: clean
    value: '0'
    values:
    - '0'
    - '1'
  - description: The name pre-fix of the deployment
    name: deployment
    required: true
  - description: The name pre-fix of the job to restart
    name: job
  - description: The ops manager user's password.
    name: opsman-password
    required: true
    secure: true
    value: 2Secret4CF
    valueExposed: true
  scheduleEnabled: true
  sequence:
    commands:
    - script: |
        #!/bin/bash

        #set -x

        #
        # Setup workspace
        #

        [ -z "@node.bitbucket@" ] && (
          echo "ERROR! The Rundeck node environment variable \"bitbucket\" has not been set."
          exit 1
        )
        [ -z "@node.opsman-host@" ] && (
          echo "ERROR! The Rundeck node environment variable \"opsman-host\" has not been set."
          exit 1
        )
        [ -z "@node.opsman-user@" ] && (
          echo "ERROR! The Rundeck node environment variable \"opsman-user\" has not been set."
          exit 1
        )
        [ -z "@option.opsman-password@" ] && (
          echo "ERROR! The Ops Manager administration UI password needs to be provided."
          exit 1
        )
        [ -z "@node.pcf-config@" ] && (
          echo "ERROR! The Rundeck node environment variable \"pcf-config\" has not been set."
          exit 1
        )

        export ROOT_DIR=$HOME/workspace/scripts
        export DOWNLOADS_DIR=$HOME/workspace/downloads
        export BACKUP_DIR=$HOME/workspace/backups
        export CONFIG_DIR=$HOME/workspace/configs

        if [ "@option.clean@" == "1" ]; then
            rm -fr $DOWNLOADS_DIR
            rm -fr $ROOT_DIR
            rm -fr $CONFIG_DIR
        fi
        mkdir -p $DOWNLOADS_DIR
        mkdir -p $BACKUP_DIR
        mkdir -p $CONFIG_DIR

        if [[ ! -e $ROOT_DIR ]]; then
            git_host="@node.bitbucket@"
            git clone ssh://git@$git_host:7999/cloudf/pcf-automation.git --branch master --single-branch $ROOT_DIR
            pushd $ROOT_DIR
            git checkout master
            popd
        else
            pushd $ROOT_DIR
            git checkout master
            git pull
            popd
        fi
        	
        #
        # Initialize script
        #

        opsman_host="@node.opsman-host@"
        opsman_user="@node.opsman-user@"
        opsman_password="@option.opsman-password@"

        dep_prefix="@option.deployment@"
        job_prefix="@option.job@"

        source $ROOT_DIR/scripts/opsman-func.sh
        source $ROOT_DIR/scripts/bosh-func.sh

        #
        # Login to Bosh and restart job
        #

        opsman::login $opsman_host $opsman_user $opsman_password 
        bosh::login $(opsman::get_director_ip) $(opsman::get_director_user) $(opsman::get_director_password)
        bosh::set_deployment $dep_prefix
        bosh::vms $bosh_deployment
        bosh::restart_job $job_prefix

        #set +x
    keepgoing: false
    strategy: node-first
  uuid: 6c5bb057-3dc4-4d6e-937b-eb4520215f20