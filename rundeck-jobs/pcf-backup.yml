- description: PCF Backup
  executionEnabled: true
  group: schedules
  id: 442e57fa-7e49-4f9d-98f9-e1f2a36fb834
  loglevel: INFO
  name: pcf-backup
  nodefilters:
    dispatch:
      excludePrecedence: true
      keepgoing: false
      rankOrder: ascending
      threadcount: 2
    filter: 'tags: pcf-dev,pcf-prod-dc20'
  nodesSelectedByDefault: true
  notification:
    onfailure:
      email:
        recipients: juergen.wendt@solera.com,Razvan.Floarea@solera.com,Michael.Nicloux@solera.com,Marco.Foglia@solera.com,Per.Naeslund@solera.com
        subject: 'NOK : pcf-backup-dev failed'
    onstart:
      email:
        recipients: juergen.wendt@solera.com,Razvan.Floarea@solera.com,Michael.Nicloux@solera.com,Marco.Foglia@solera.com,Per.Naeslund@solera.com
        subject: pcf-backup-dev started
    onsuccess:
      email:
        recipients: juergen.wendt@solera.com,Razvan.Floarea@solera.com,Michael.Nicloux@solera.com,Marco.Foglia@solera.com,Per.Naeslund@solera.com
        subject: 'OK : pcf-backup-dev succeded'
  options:
  - description: All backups older than the backup age in days will be deleted.
    name: backup-age
    value: '6'
  - description: Set this value to '1' to update the scripts from source control.
    name: clean
    value: '0'
    values:
    - '0'
    - '1'
  - description: Ops Manager encryption key required if the Web GUI was restarted or VM was rebooted for initializing the authentication system.
    name: opsman-key
    secure: true
    valueExposed: true
  - description: The Ops Manager Web UI administrator password.
    name: opsman-password
    required: true
    secure: true
    value: 2Secret4CF
    valueExposed: true
  - description: The user password to ssh into Ops Manager VM.
    name: opsman-ssh-password
    required: true
    secure: true
    value: 2Secret4CF
    valueExposed: true
  schedule:
    month: '*'
    time:
      hour: '22'
      minute: '30'
      seconds: '0'
    weekday:
      day: '*'
    year: '*'
  scheduleEnabled: true
  sequence:
    commands:
    - script: |
        #!/bin/bash

        #set -x

        #
        # Rundeck variables
        #

        [ -z "@node.bitbucket@" ] && (
            echo "ERROR! The Rundeck node environment variable \"bitbucket\" has not been set."
            exit 1
        )
        [ -z "@node.opsman-host@" ] && (
            echo "ERROR! The Rundeck node environment variable \"opsman-host\" has not been set."
            exit 1
        )
        [ -z "@node.opsman-user@" ] && (
            echo "ERROR! The Rundeck node environment variable \"opsman-user\" has not been set."
            exit 1
        )
        [ -z "@option.opsman-password@" ] && (
            echo "ERROR! The Rundeck job runtime variable \"opsman-password\" has not been set."
            exit 1
        )
        [ -z "@node.opsman-ssh-user@" ] && (
            echo "ERROR! The Rundeck node environment variable \"opsman-ssh-user\" has not been set."
            exit 1
        )
        [ -z "@option.opsman-ssh-password@" ] && (
            echo "ERROR! The Rundeck job runtime variable \"opsman-ssh-password\" has not been set."
            exit 1
        )

        #
        # Setup workspace
        #

        export ROOT_DIR=$HOME/workspace/scripts
        export BACKUP_DIR=/backup/@node.name@

        if [ "@option.clean@" == "1" ]; then
            rm -fr $ROOT_DIR
        fi
        if [[ ! -e $ROOT_DIR ]]; then
            git_host="@node.bitbucket@"
            git clone ssh://git@$git_host:7999/cloudf/pcf-automation.git --branch master --single-branch $ROOT_DIR
            pushd $ROOT_DIR
            git checkout master
            popd
        else
            pushd $ROOT_DIR
            git checkout master
            git pull
            popd
        fi

        mkdir -p $BACKUP_DIR
        
        #
        # Set variables required by runner script
        #
        
        export OPSMAN_HOST="@node.opsman-host@"
        export OPSMAN_USER="@node.opsman-user@"
        export OPSMAN_PASSWD="@option.opsman-password@"
        export OPSMAN_SSH_USER="@node.opsman-ssh-user@"
        export OPSMAN_SSH_PASSWORD="@option.opsman-ssh-password@"
        export OPSMAN_KEY="@option.opsman-key@"
        export BACKUP_AGE="@option.backup-age@"

        $ROOT_DIR/scripts/run-pcf-backup.sh
        
        #set +x

    keepgoing: false
    strategy: node-first
  uuid: 442e57fa-7e49-4f9d-98f9-e1f2a36fb834